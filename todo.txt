Move more tests to cucumber framework
Try to make more advanced evaluation function (see ideas below)

TODO: Engine could not find a move in this position:
https://www.ficsgames.org/cgi-bin/show.cgi?ID=490680942

Evaluation ideers:
Distance between locations are easy to calculate.
King safety: How many opponent pieces are on the could reach the king? OR what is the average distance to opponent pieces? How many pieces of my own are close to my king? Is the king near the boorders of the board? How far is the king from the castling positions? (in the opening moves, later it is ok to be closer to the pawns close to promotion) The board evaluator should maybe have access to the current movenumber?

Characterisation on whether this is the opening / middlegame / or endgame 
(by piece configuration).

Pawns: What is the average distance to the opponent backline? (promotion)
Is the field free infront of it? Is it supported from the back by other pawns?

Bishops: How many free fields are around it in distance 1? or 2?

Knights:
How far are the knights from one another?
Of the eight possible moves how many are my own / free squares / opponent pieces?

Rooks:
are they doubles? Are they close to the opponents king?

For the opening: Penalty for not moving officers from their original position. (So compare current position to original)

These points will allow for much better debugging of the chess Engines and to play with different sorts of move generation and board evaluations.

This adds OOP to chess. Chess is inherently monolithic and mutable! It is super hard to debug and maintain. With this implementation we have tried to first of all destroy the monolith. The individual parts of a chess program is now seperated and can be tested on it's own. Futhermore we have added the possibility of testing new algorithms and ideas through a safe playground. The immutable datastructures makes it safe to play with the chess program - unwanted behavior from positions that were cashed and updated afterwards are now not possible. That saves the programmer from a lot of pain of inexplainable behaivor. 

f(p) = 20000(K-K')
       + 900(Q-Q')
       + 500(R-R')
       + 300(B-B' + N-N')
       + 100(P-P')
       - 50(D-D' + S-S' + I-I')
       + 10(M-M') + ...

KQRBNP = number of kings, queens, rooks, bishops, knights and pawns
D,S,I = doubled, blocked and isolated pawns
M = Mobility (the number of legal moves)


Wierd error in this position when engine is to play:
r1b2k1r/pppp2pp/2n1pp2/2P3q1/1P1PP3/2BB4/P3QPPP/3R1RK1 b kq - 0 14